.PHONY: install
install:
	pip install -r dev-requirements.txt
	$(MAKE) install-hooks


.PHONY: install-hooks
install-hooks:
	pre-commit install -f --hook-type pre-commit
	pre-commit install -f --hook-type pre-push


.PHONY: checks
checks:
	pre-commit run -a
	@$(MAKE) readme


.PHONY: docs
docs: readme


.PHONY: readme
readme:
	@cp README.md /tmp/viper_README.md
	@echo "# Viper Infrastructure Commander" | tee README.md
	@echo "" | tee -a README.md
	@echo
	@echo "[![PyPI version](https://img.shields.io/pypi/v/viper-infra-commander.svg)](https://pypi.org/project/viper-infra-commander)" | tee -a README.md
	@echo "[![PyPI pyversions](https://img.shields.io/pypi/pyversions/viper-infra-commander.svg)](https://pypi.org/project/viper-infra-commander)" | tee -a README.md
	@echo "[![Build Status](https://travis-ci.com/sayanarijit/viper.svg?branch=master)](https://travis-ci.com/sayanarijit/viper)" | tee -a README.md
	@echo "[![codecov](https://codecov.io/gh/sayanarijit/viper/branch/master/graph/badge.svg)](https://codecov.io/gh/sayanarijit/viper)" | tee -a README.md
	@echo "[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/python/black)" | tee -a README.md
	@echo "" | tee -a README.md
	@echo
	@.venv/bin/python -c "import viper; print(viper.__doc__)" | tee -a README.md
	@echo "" | tee -a README.md
	@echo
	@echo "## Viper CLI Reference" | tee -a README.md
	@echo "" | tee -a README.md
	@echo '```' | tee -a README.md
	@viper --help | tee -a README.md
	@echo '```' | tee -a README.md
	@echo "" | tee -a README.md
	@echo
	@echo "## Contributing to Viper" | tee -a README.md
	@echo "" | tee -a README.md
	@echo "See the [contribution guidelines](https://github.com/sayanarijit/viper/blob/master/CONTRIBUTING.md)." | tee -a README.md
	@echo "" | tee -a README.md
	@echo
	@echo '---' | tee -a README.md
	@echo "" | tee -a README.md
	@echo 'NOTE: This file is generated by running "make readme"' | tee -a README.md


.PHONY: unit-test
unit-test:
	pytest --cov=viper .


.PHONY: test
test:
	$(MAKE) checks
	$(MAKE) unit-test
